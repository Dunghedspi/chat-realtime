{"version":3,"sources":["Plugins/axios/index.js","apis/AuthApi/index.js","constants/actions/user.action.js","utils/toastify.js","actions/auth.action.js","pages/AuthPage/index.jsx","apis/UserApi/index.js","components/ConversationSearch/index.js","apis/MessageApi/index.js","constants/actions/room.action.js","apis/RoomApi/index.js","actions/room.action.js","components/ConversationListItem/index.js","components/Toolbar/index.js","components/ToolbarButton/index.js","actions/user.action.js","components/ConversationList/index.js","components/Compose/index.js","components/Message/index.js","components/atoms/AtomsButton.jsx","components/atoms/AtomsProfilePicture.jsx","components/atoms/AtomsLogo.jsx","components/atoms/AtomsVideo.jsx","components/atoms/AtomsShareButton.jsx","components/atoms/AtomsFullScreenButton.jsx","images/menu.svg","components/molecules/MoleculesLocalVideo.jsx","components/molecules/MoleculesRemoteVideo.jsx","components/atoms/AtomsTrunOffButton.jsx","components/molecules/MoleculesLeftSide.jsx","components/molecules/MoleculesVideoControls.js","components/organisms/OrganismsMain.jsx","components/organisms/OrganismsHeader.jsx","utils/peer-video-connection.js","pages/VideoCall/Room.jsx","components/MessageList/index.js","components/Messenger/index.js","constants/actions/messagelist.action.js","constants/actions/call.action.js","actions/call.action.js","pages/ChatPage/index.jsx","socket/index.js","routes.js","App/index.js","serviceWorker.js","reducers/room.reducer.js","reducers/user.reducer.js","reducers/messagelist.reducer.js","reducers/call.reducer.js","reducers/index.reducer.js","store.js","index.js"],"names":["AxiosCustom","instance","axios","create","headers","process","baseURL","withCredentials","interceptors","request","use","response","error","console","log","Promise","reject","callApi","method","url","payload","params","a","defaults","data","JSON","stringify","QueryString","result","setAuthorization","token","sendImage","message","dowloadImage","instanceDowloadImage","responseType","axiosCustom","AuthApi","SignUp","isSignUp","status","SignIn","user","asset_token","ForgotPassword","isReset","UserActionType","toast","configure","toastifySuccess","mess","success","position","POSITION","BOTTOM_RIGHT","autoClose","toastifyError","AuthAction","type","Form","option","onSubmit","methods","register","handleSubmit","control","errors","className","id","name","placeholder","required","ref","disabled","schema","yup","shape","email","password","AuthPage","React","useState","setOption","navigation","useNavigate","useForm","validationSchema","mode","dispatch","useDispatch","toastify","repeatPassword","info","onClick","href","target","UserApi","changeAvatar","avatarUrl","avatar","changePassword","isChange","searchUserByEmail","users","getUserInfo","ConversationSearch","props","setUsers","userState","useSelector","state","UserReducer","socket","handleOnChange","event","value","onChange","length","map","index","user_id","createRoom","handleClick","src","alt","MessageApi","GetListRoom","messages","dowloadFileImage","filename","RoomActionType","rooms","RoomAction","ConversationListItem","useEffect","shave","room","roomActive","RoomReducer","userShow","findIndex","findUser","online","text","size","userRead","showMess","showMessage","Toolbar","title","leftItems","rightItems","ToolbarButton","icon","UserAction","userReducer","callback1","callback2","ConversationList","toggleModal","setToggleModal","changepass","setChangepass","methods1","methods2","handleSubmitAvatar","registerAvatar","openModal","class","htmlFor","hidden","formData","FormData","append","autoFocus","Compose","sendMessage","sendTyping","endTyping","openEmoji","setOpenEmoji","document","getElementById","leftItem","e","blur","reset","autoComplete","onBlur","onFocus","onEmojiClick","even","emojiObject","emoji","disableAutoFocus","groupNames","smileys_people","skinTone","SKIN_TONE_MEDIUM_DARK","disableSearchBar","baseUrl","friendlyTimestamp","callback","Message","isMine","startsSequence","endsSequence","showTimestamp","mine","showUser","isSend","moment","timestamp","format","join","modal","modalImg","style","display","showModal","item","path","split","Button","styled","div","h1","button","AtomsVideo","video","AtomsFullScreenButton","isFullScreen","onToggle","AtomsShareScreen","isSharing","MoleculesLocalVideo","MoleculesRemoteVideo","AtomsTurnOffButton","isLeftSideShow","selected","onTurnOff","MoleculesVideoControls","isScreenSharing","onScreenShare","onFullScreen","isTimerStarted","elapsedTime","setElapsedTime","interval","setInterval","time","clearInterval","bottom","justifyContent","width","color","fontWeight","right","Date","toISOString","substr","OrganismsMain","header","input","attrs","menu","main","full","window","RTCPeerConnection","RTCSessionDescription","PeerConnectionSession","peerConnection","this","isAlreadyCalling","addEventListener","connectionState","string","fn","charAt","toUpperCase","slice","onCallMade","room_id","createOffer","offer","setLocalDescription","emit","on","setRemoteDescription","createAnswer","answer","_onConnected","_onDisconnected","ontrack","stream","streams","close","onconnectionstatechange","peerVideoConnection","senders","Room","qs","parse","useLocation","search","ignoreQueryPrefix","userMediaStream","setUserMediaStream","startTimer","setStartTimer","displayMediaStream","setDisplayMediaStream","setFullScreen","userCallReject","setUserCallReject","turnOff","setTurnOff","localVideo","useRef","remoteVideo","mainRef","shareScreen","navigator","mediaDevices","getDisplayMedia","find","sender","track","kind","replaceTrack","getTracks","getVideoTracks","cancelScreenSharing","current","srcObject","forEach","stop","isScreenShared","iceServers","urls","io","createPeerConnectionContext","getUserMedia","min","ideal","height","aspectRatio","audio","push","addTrack","createMediaStream","onAnswerMade","callUser","onCallRejected","alert","onTrack","onResolveCall","onConnected","onDisconnected","onRejectCall","setTimeout","onListenStateChange","turnOffVideoCall","parseInt","localStorage","getItem","resolveCall","callUserBeforeConnect","autoPlay","muted","Boolean","elem","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","fullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","MessageList","setMine","methodsSendImage","handleSubmitSendImage","registerSendImage","bottomRef","scrollIntoView","behavior","open","setItem","i","tempMessages","flageUser","previous","next","currentMoment","previousMoment","previousDuration","duration","diff","author","as","nextMoment","nextDuration","sendReadMessage","unshift","renderMessages","isTyping","click","sendMess","image","fileReader","FileReader","readAsDataURL","onload","arrayBuffer","Messenger","MessageListActionType","CallActionType","CallAction","App","socketConnection","userId","socketFunction","onbeforeunload","typing","joinRoom","afterConnect","joinListRoom","rejectCall","SocketService","offset","setSocket","getListMessage","callState","CallReducer","isCall","userCall","handleClickNo","handleClickYes","routes","element","routing","useRoutes","location","hostname","match","initState","action","roomIndex","splice","newListRoom","message_id","isLogin","UserReducers","MessageListReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","history","createBrowserHistory","ReactDOM","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.330036cd.chunk.js","sourcesContent":["import axios from 'axios';\nimport QueryString from 'qs';\n\nconst axiosCustom = () => {\n  const instance = axios.create({\n    headers: {\n      'X-Requested-With': 'XMLHttpRequest',\n      'Access-Control-Allow-Origin': process.env.REACT_APP_DOMAIN_CLIENT,\n    },\n    baseURL: process.env.REACT_APP_SERVER_DOMAIN,\n    withCredentials: true,\n  });\n\n  const handleSuccess = response => {\n    return response;\n  };\n  const handleError = error => {\n    console.log(error);\n    return Promise.reject(error);\n  };\n\n  instance.interceptors.request.use(handleSuccess, handleError);\n\n  return {\n    callApi: async (method, url, payload, params) => {\n      instance.defaults.headers['Content-Type'] = 'application/json';\n      try {\n        const result = await instance({\n          method,\n          url,\n          data: JSON.stringify(payload),\n          params: QueryString.stringify(params) || null,\n        });\n        return result;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    setAuthorization: token => {\n      instance.defaults.headers['Authorization'] = `bearer ${token}`;\n    },\n    sendImage: async (method, url, payload) => {\n      instance.defaults.headers['Content-Type'] = 'multipart/form-data';\n      try {\n        const result = await instance({\n          method,\n          url,\n          data: payload,\n        });\n        return result;\n      } catch (error) {\n        console.error(error.message);\n      }\n    },\n    dowloadImage: async (method, url, payload) => {\n      const instanceDowloadImage = instance;\n      instanceDowloadImage.defaults.responseType = 'stream';\n      instanceDowloadImage.defaults.headers['Content-Type'] =\n        'application/octet-stream';\n      await instanceDowloadImage({\n        method,\n        url,\n      });\n    },\n  };\n};\nexport const AxiosCustom = axiosCustom();\n","import { AxiosCustom } from '../../Plugins/axios';\n\nexport const AuthApi = {\n  SignUp: async payload => {\n    let isSignUp = false;\n    const response = await AxiosCustom.callApi('POST', '/users', payload);\n    if (response && response.status === 201) {\n      isSignUp = true;\n    }\n    return isSignUp;\n  },\n\n  SignIn: async payload => {\n    const response = await AxiosCustom.callApi('POST', '/auth/signin', payload);\n    let user = \"\";\n    if (response && response.status === 200) {\n      const { asset_token } = response.data;\n      AxiosCustom.setAuthorization(asset_token);\n      user = response.data.user;\n    }\n    return user;\n  },\n\n  ForgotPassword: async payload => {\n    let isReset = false;\n    const response = await AxiosCustom.callApi('PUT', '/users/forgotpass', payload);\n    if(response && response.status === 200){\n      isReset = true;\n    }\n    return isReset;\n  }\n};\n","export const UserActionType = {\n    SET_INFO: \"SET_INFO\",\n    RESET_INFO: \"RESET_INFO\",\n    CHANGE_AVATAR: \"CHANGE_AVATAR\",\n}","import { toast } from \"react-toastify\";\ntoast.configure();\nexport const toastifySuccess = (mess) => {\n  toast.success(mess, {\n    position: toast.POSITION.BOTTOM_RIGHT,\n    autoClose: 2000,\n  });\n};\n\nexport const toastifyError = (mess) => {\n  toast.error(mess, { position: toast.POSITION.BOTTOM_RIGHT, autoClose: 2000 });\n};\nexport const toastifyInfo = (mess) => {\n  toast.info(mess, { position: toast.POSITION.BOTTOM_RIGHT, autoClose: 2000 });\n};\n","import { AuthApi } from '../apis/AuthApi';\nimport { UserActionType } from '../constants/actions/user.action';\nimport * as toastify from '../utils/toastify';\n\nexport const AuthAction = {\n  signIn: payload => {\n    return {\n      type: UserActionType.SET_INFO,\n      payload,\n    };\n  },\n};\n","import React from 'react';\nimport './Signin.css';\nimport { AuthApi } from '../../apis/AuthApi';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { AuthAction } from '../../actions/auth.action';\nimport * as toastify from '../../utils/toastify';\nimport * as yup from 'yup';\n\nfunction Form({ option, onSubmit, methods }) {\n  const { register, control, handleSubmit, errors } = methods;\n\n  return (\n    <form className=\"account-form\" onSubmit={handleSubmit(onSubmit)}>\n      <div\n        className={\n          'account-form-fields ' +\n          (option === 1 ? 'sign-in' : option === 2 ? 'sign-up' : 'forgot')\n        }\n      >\n        <input\n          id=\"email\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"E-mail\"\n          required\n          ref={register}\n        />\n        <input\n          id=\"password\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required={option === 1 || option === 2 ? true : false}\n          disabled={option === 3 ? true : false}\n          ref={option === 3 ? null : register}\n        />\n        <input\n          id=\"repeat-password\"\n          name=\"repeatPassword\"\n          type=\"password\"\n          placeholder=\"Repeat password\"\n          required={option === 2 ? true : false}\n          disabled={option === 1 || option === 3 ? true : false}\n          ref={option === 2 ? register : null}\n        />\n      </div>\n      <button className=\"btn-submit-form\" type=\"submit\">\n        {option === 1 ? 'Sign in' : option === 2 ? 'Sign up' : 'Reset password'}\n      </button>\n    </form>\n  );\n}\n\nconst schema = yup.object().shape({\n  email: yup.string().email(),\n  password: yup.string().required(),\n});\nexport default function AuthPage() {\n  const [option, setOption] = React.useState(1);\n  const navigation = useNavigate();\n  const methods = useForm({ validationSchema: schema, mode: 'onBlur' });\n  const dispatch = useDispatch();\n  const handleSubmit = async payload => {\n    switch (option) {\n      case 1:\n        {\n          const user = await AuthApi.SignIn(payload);\n          console.log(user);\n          if (user) {\n            toastify.toastifySuccess('Logged in successfully');\n            dispatch(AuthAction.signIn(user));\n            navigation('/');\n          } else {\n            toastify.toastifyError('Email or password is incorrect');\n          }\n        }\n        break;\n\n      case 2:\n        console.log(payload);\n        if (payload.password === payload.repeatPassword) {\n          const isSignUp = await AuthApi.SignUp(payload);\n          if (isSignUp) {\n            toastify.toastifySuccess('Create Account Success');\n            toastify.toastifyInfo('Please login again');\n            setOption(1);\n          } else {\n            toastify.toastifyError('Email is already in use!');\n          }\n        } else {\n          toastify.toastifyError('Passwords do not match');\n        }\n        break;\n\n      case 3:\n        const isReset = await AuthApi.ForgotPassword(payload);\n        if (isReset) {\n          toastify.toastifySuccess('password reset was successful');\n          toastify.toastifySuccess('check your email inbox');\n        } else {\n          toastify.toastifyError('Account does not exist!');\n        }\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"auth-box\">\n      <div className=\"container\">\n        <header>\n          <div\n            className={\n              'header-headings ' +\n              (option === 1 ? 'sign-in' : option === 2 ? 'sign-up' : 'forgot')\n            }\n          >\n            <span>Sign in to your account</span>\n            <span>Create an account</span>\n            <span>Reset your password</span>\n          </div>\n        </header>\n        <ul className=\"options\">\n          <li\n            className={option === 1 ? 'active' : ''}\n            onClick={() => setOption(1)}\n          >\n            Sign in\n          </li>\n          <li\n            className={option === 2 ? 'active' : ''}\n            onClick={() => setOption(2)}\n          >\n            Sign up\n          </li>\n          <li\n            className={option === 3 ? 'active' : ''}\n            onClick={() => setOption(3)}\n          >\n            Forgot\n          </li>\n        </ul>\n        <Form option={option} onSubmit={handleSubmit} methods={methods} />\n        <footer>\n          <a href=\"https://facebook.com/dunghedspi\" target=\"_blank\">\n            Dunghedspi\n          </a>\n        </footer>\n      </div>\n    </div>\n  );\n}\n","import { AxiosCustom } from '../../Plugins/axios';\n\nexport const UserApi = {\n  changeAvatar: async payload => {\n    let avatarUrl = '';\n    const response = await AxiosCustom.sendImage(\n      'PUT',\n      '/users/upload/avatar',\n      payload,\n    );\n    if (response && response.status === 200) {\n      avatarUrl = response.data.avatar;\n    }\n    return avatarUrl;\n  },\n  changePassword: async payload => {\n    let isChange = false;\n    const response = await AxiosCustom.callApi(\n      'PUT',\n      '/users/changePassword',\n      payload,\n    );\n    if (response && response.status === 200) {\n      isChange = true;\n    }\n    return isChange;\n  },\n  searchUserByEmail: async payload => {\n    let users = [];\n    const response = await AxiosCustom.callApi(\n      'GET',\n      '/users/get-user-list/' + payload.email,\n    );\n    if (response && response.status === 200) {\n      users = response.data;\n    }\n    console.log(users);\n    return users;\n  },\n  getUserInfo: async () => {\n    let user = null;\n    const response = await AxiosCustom.callApi('GET', '/users');\n    if (response && response.status === 200) {\n      user = response.data;\n    }\n    return user;\n  },\n};\n","import React from 'react';\nimport './ConversationSearch.css';\nimport { UserApi } from '../../apis/UserApi';\nimport { useSelector } from 'react-redux';\n\nexport default function ConversationSearch(props) {\n  const [users, setUsers] = React.useState([]);\n  const userState = useSelector(state => state.UserReducer);\n  const { socket } = props;\n  const handleOnChange = async event => {\n    const email = event.target.value;\n    const users = await UserApi.searchUserByEmail({ email });\n    setUsers(users);\n  };\n\n  const handleClick = id => {\n    const user = users[id];\n    setUsers([]);\n    const payload = {\n      name: \"\",\n      token: [userState.id, user.id],\n      user_id: user.id\n    }\n    socket.createRoom(payload);\n  };\n  return (\n    <div className=\"conversation-search\">\n      <input\n        type=\"search\"\n        className=\"conversation-search-input\"\n        placeholder=\"Search Messages\"\n        onChange={event => handleOnChange(event)}\n      />\n      {users.length > 0 ? (\n        <div className=\"user-search-box\">\n          {users.map((user, index) => {\n            return (\n              <div\n                onClick={() => handleClick(index)}\n                key={index}\n                className=\"user-box\"\n              >\n                <img\n                  className=\"conversation-photo\"\n                  src={user.avatar}\n                  alt=\"conversation\"\n                />\n                <h1 className=\"user-email\">{user.email}</h1>\n              </div>\n            );\n          })}\n        </div>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n}\n","import { AxiosCustom } from '../../Plugins/axios';\n\nexport const MessageApi = {\n  GetListRoom: async payload => {\n    let messages = [];\n    const response = await AxiosCustom.callApi('GET', `/message/${payload}`);\n    if (response && response.status === 200) {\n      messages = response.data;\n    }\n    return messages;\n  },\n  dowloadFileImage: filename => {\n    AxiosCustom.dowloadImage('GET', `/file/dowload/${filename}`);\n  },\n};\n","export const RoomActionType = {\n  GET_LIST_ROOM: 'GET_LIST_ROOM',\n  CHANGE_ACTIVE_ROOM: 'CHANGE_ACTIVE_ROOM',\n  CHANGE_TOP_ROOM: 'CHANGE_TOP_ROOM',\n  SET_MESSAGE: 'SET_MESSAGE',\n  MOVE_TOP_ROOM: 'MOVE_TOP_ROOM',\n  UPDATE_TYPING_ACTIVE_ROOM: 'UPDATE_TYPING_ACTIVE_ROOM',\n  UPDATE_STATUS_USER: 'UPDATE_STATUS_USER',\n  UPDATE_READ_MESSAGE: 'UPDATE_READ_MESSAGE',\n};\n","import { AxiosCustom } from '../../Plugins/axios';\n\nexport const RoomApi = {\n  GetListRoom: async payload => {\n    let rooms = [];\n    const response = await AxiosCustom.callApi('GET', `/user-room/${payload}`);\n    if (response && response.status === 200) {\n      rooms = response.data;\n    }\n    return rooms;\n  },\n};\n","import { MessageApi } from '../apis/MessageApi';\nimport { RoomApi } from '../apis/RoomApi';\nimport { RoomActionType } from '../constants/actions/room.action';\n\nexport const RoomAction = {\n  getListRoom: payload => {\n    return {\n      type: RoomActionType.GET_LIST_ROOM,\n      payload,\n    };\n  },\n  changeRoomActive: payload => {\n    return {\n      type: RoomActionType.CHANGE_ACTIVE_ROOM,\n      payload,\n    };\n  },\n  changeTopRoom: payload => {\n    return {\n      type: RoomActionType.CHANGE_TOP_ROOM,\n      payload,\n    };\n  },\n  setMessage: payload => {\n    return async dispatch => {\n      const messages = await MessageApi.GetListRoom(payload);\n      dispatch({\n        type: RoomActionType.SET_MESSAGE,\n        payload: messages,\n      });\n    };\n  },\n  moveTop: payload => {\n    return {\n      type: RoomActionType.MOVE_TOP_ROOM,\n      payload,\n    };\n  },\n  updateTypingActiveRoom: payload => {\n    return {\n      type: RoomActionType.UPDATE_TYPING_ACTIVE_ROOM,\n      payload,\n    };\n  },\n  updateStatusUser: payload => {\n    return {\n      type: RoomActionType.UPDATE_STATUS_USER,\n      payload,\n    };\n  },\n  setUpdateReadMessage: payload => {\n    return {\n      type: RoomActionType.UPDATE_READ_MESSAGE,\n      payload,\n    }\n  }\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport shave from 'shave';\nimport { RoomAction } from '../../actions/room.action';\n\nimport './ConversationListItem.css';\n\nconst findUser = (users, user_id) => {\n  const index = users.findIndex(user => user.id !== user_id);\n  return users[index];\n};\n\nexport default function ConversationListItem(props) {\n  useEffect(() => {\n    shave('.conversation-snippet', 50);\n  });\n  const dispatch = useDispatch();\n  const { users, name, messages, id } = props.room;\n  const usersReadList = messages?.users;\n  const user = useSelector(state => state.UserReducer);\n  const { roomActive } = useSelector(state => state.RoomReducer);\n\n  const handleClick = id => {\n    dispatch(RoomAction.changeRoomActive(props.room));\n  };\n\n  const showMessage = messages => {\n    const message = messages.length > 0 ? messages[messages.length - 1] : '';\n    let text = '';\n    if (message?.type === 'image') {\n      text = 'Image';\n    } else {\n      text = message?.message;\n    }\n\n    const showMess = () => {\n      const size = message?.users?.length;\n      if (size === 0 && message?.user_id === user.id) {\n        return (\n          <>\n            <p className=\"conversation-snippet no_read\">{text}</p>\n            <i className=\"ion-ios-checkmark-circle-outline\"></i>\n          </>\n        );\n      } else if (size === 0) {\n        return <p className={`conversation-snippet no_read`}>{text}</p>;\n      } else if (size) {\n        const userRead = message?.users[0];\n        return (\n          <>\n            <p className={`conversation-snippet`}>{text}</p>\n            {userRead?.id !== user?.id ? (\n              <img src={user?.avatar} className=\"avatar_user_read\" />\n            ) : (\n              ''\n            )}\n          </>\n        );\n      }\n    };\n\n    return <div className=\"message_box_room\">{showMess()}</div>;\n  };\n  const userShow = findUser(users, user.id);\n  return (\n    <div\n      className={`conversation-list-item ${\n        roomActive.id === id ? 'active-1' : ''\n      }`}\n      onClick={() => handleClick(id)}\n    >\n      <img\n        className={`conversation-photo ${\n          userShow?.online ? 'border-online' : ''\n        }`}\n        src={userShow.avatar}\n        alt=\"conversation\"\n      />\n      {userShow?.online ? (\n        <img src=\"./onlineIcon.png\" className=\"onlineIcon\" />\n      ) : (\n        ''\n      )}\n      <div className=\"conversation-info\">\n        <h1 className=\"conversation-title\">{userShow.email}</h1>\n        {showMessage(messages)}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './Toolbar.css';\n\nexport default function Toolbar(props) {\n    const { title, leftItems, rightItems } = props;\n    return (\n      <div className=\"toolbar\">\n        <div className=\"left-items\">{ leftItems }</div>\n        <h1 className=\"toolbar-title\">{ title }</h1>\n        <div className=\"right-items\">{ rightItems }</div>\n      </div>\n    );\n}","import React from 'react';\nimport './ToolbarButton.css';\n\nexport default function ToolbarButton(props) {\n    const { icon, onClick } = props;\n    return (\n      <i className={`toolbar-button ${icon}`} onClick={onClick}/>\n    );\n}","import { UserApi } from \"../apis/UserApi\";\nimport { UserActionType } from \"../constants/actions/user.action\";\nimport * as toastify from \"../utils/toastify\";\n\nexport const UserAction = {\n  changeAvatar: (payload) => {\n    return async (dispatch) => {\n      const avatarUrl = await UserApi.changeAvatar(payload);\n      if (avatarUrl) {\n        toastify.toastifySuccess(\"Successful avatar update\");\n        dispatch({\n          type: UserActionType.CHANGE_AVATAR,\n          payload: avatarUrl,\n        });\n      } else {\n        toastify.toastifyError(\"UnSuccessful avatar update\");\n      }\n    };\n  },\n  changePassword: (payload) => {\n    return async () => {\n      const isChange = await UserApi.changePassword(payload);\n      if (isChange) {\n        toastify.toastifySuccess(\"Successful UserInfo update\");\n      } else {\n        toastify.toastifyError(\"UnSuccessful UserInfo update\");\n      }\n    };\n  },\n  getUserInfo: (userReducer, callback1, callback2) => {\n    return async (dispatch) => {\n      const user = await UserApi.getUserInfo();\n      if (user) {\n        dispatch({\n          type: UserActionType.SET_INFO,\n          payload: user,\n        });\n        callback2(user.id);\n      } else {\n        callback1();\n      }\n    };\n  },\n};\n","import React, { useState, useEffect } from 'react';\nimport ConversationSearch from '../ConversationSearch';\nimport ConversationListItem from '../ConversationListItem';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\nimport './ConversationList.css';\nimport { UserAction } from '../../actions/user.action';\n\nexport default function ConversationList(props) {\n  const { rooms } = useSelector(state => state.RoomReducer);\n  const user = useSelector(state => state.UserReducer);\n  const [toggleModal, setToggleModal] = React.useState(false);\n  const [changepass, setChangepass] = React.useState(false);\n  const methods1 = useForm();\n  const methods2 = useForm();\n  const dispatch = useDispatch();\n  const { handleSubmit, register } = methods1;\n\n  const handleSubmitAvatar = methods2.handleSubmit;\n  const registerAvatar = methods2.register;\n\n  const onsubmitAvatar = data => {\n    const formData = new FormData();\n    formData.append('avatar', data.avatar[0]);\n    dispatch(UserAction.changeAvatar(formData));\n  };\n  const onSubmitInfo = data => {\n    dispatch(UserAction.changePassword(data));\n  };\n\n  const openModal = () => {\n    setToggleModal(true);\n  };\n  return (\n    <>\n      <div className=\"conversation-list\">\n        <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" onClick={openModal} />,\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" onClick={openModal} />,\n          ]}\n        />\n        <ConversationSearch {...props} />\n        {rooms.map((room, index) => (\n          <ConversationListItem key={index} room={room} />\n        ))}\n      </div>\n      {toggleModal ? (\n        <div className=\"Modal-Background\">\n          <span className=\"close\" onClick={() => setToggleModal(false)}>\n            &times;\n          </span>\n          <div class=\"Center-Content\">\n            <form className=\"form-avatar\" name=\"form-avatar\">\n              <label htmlFor=\"avatar\">\n                <img src={user.avatar} className=\"avatar-user\" />\n              </label>\n              <input\n                type=\"file\"\n                name=\"avatar\"\n                ref={registerAvatar}\n                hidden\n                id=\"avatar\"\n                onChange={handleSubmitAvatar(onsubmitAvatar)}\n              />\n            </form>\n            <form\n              className=\"info\"\n              onSubmit={handleSubmit(onSubmitInfo)}\n              name=\"form-info\"\n            >\n              <div className=\"input-group\">\n                <label htmlFor=\"email-user\">Email</label>\n                <input disabled value={user.email} id=\"email-user\" />\n              </div>\n              {changepass ? (\n                <>\n                  <div className=\"input-group\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                      id=\"password\"\n                      name=\"password\"\n                      type=\"password\"\n                      autoFocus={true}\n                      ref={register}\n                    />\n                  </div>\n                  <div className=\"input-group\">\n                    <label htmlFor=\"new-password\">New Password</label>\n                    <input\n                      id=\"new-password\"\n                      name=\"newPassword\"\n                      type=\"password\"\n                      ref={register}\n                    />\n                  </div>\n                </>\n              ) : (\n                ''\n              )}\n              {!changepass ? (\n                <button\n                  className=\"change-pass\"\n                  type=\"button\"\n                  onClick={() => setChangepass(true)}\n                >\n                  Change Password\n                </button>\n              ) : (\n                <div className=\"button-group\">\n                  <button type=\"submit\">Submit</button>\n                </div>\n              )}\n            </form>\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n","import React from 'react';\nimport './Compose.css';\nimport { useForm } from 'react-hook-form';\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react';\nimport { useSelector } from 'react-redux';\n\nexport default function Compose(props) {\n  const { sendMessage, sendTyping, endTyping } = props;\n  const { handleSubmit, register } = useForm();\n  const [openEmoji, setOpenEmoji] = React.useState(false);\n  const { roomActive } = useSelector(state => state.RoomReducer);\n  // React.useEffect(() => {\n  //   window.onclick = e => {\n  //     const element = e.target;\n  //     console.log(element.classList[0] === 'emoji-picker');\n  //     setOpenEmoji(() => element.classList[0] === 'emoji-picker');\n  //   };\n\n  //   return () => (window.onclick = {});\n  // }, []);\n  React.useEffect(() => {\n    const inputElement = document.getElementById('message_input');\n    inputElement.value = '';\n    setOpenEmoji(() => false);\n  }, [roomActive]);\n  const onSubmit = (data, e) => {\n    console.log(data);\n    sendMessage(data, () => {\n      document.getElementById('message_input').blur();\n    });\n\n    e.target.reset();\n  };\n  const onEmojiClick = (even, emojiObject) => {\n    console.log(emojiObject);\n    const inputElement = document.getElementById('message_input');\n    inputElement.value += emojiObject.emoji;\n  };\n  return (\n    <div className=\"compose\">\n      {props.leftItem}\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          type=\"text\"\n          className=\"compose-input\"\n          placeholder=\"Type a message, @name\"\n          name=\"message\"\n          ref={register}\n          onChange={event => sendTyping(event)}\n          autoComplete=\"off\"\n          onBlur={endTyping}\n          onFocus={() => setOpenEmoji(false)}\n          id=\"message_input\"\n        />\n        <div className=\"emoji-box\">\n          <i\n            className=\"ion-md-happy emoji_icon\"\n            onClick={() => setOpenEmoji(!openEmoji)}\n          ></i>\n          <div className=\"emoji-picker\">\n            {openEmoji ? (\n              <Picker\n                onEmojiClick={onEmojiClick}\n                disableAutoFocus={true}\n                groupNames={{ smileys_people: 'PEOPLE' }}\n                skinTone={SKIN_TONE_MEDIUM_DARK}\n                className=\"emoji-picker\"\n                disableSearchBar={true}\n              />\n            ) : (\n              ''\n            )}\n          </div>\n        </div>\n      </form>\n\n      {props.rightItems}\n    </div>\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport './Message.css';\nimport { MessageApi } from '../../apis/MessageApi';\nimport { useSelector } from 'react-redux';\nconst baseUrl = process.env.REACT_APP_SERVER_DOMAIN + '/uploads/image/';\nconst showMessage = (type, message, friendlyTimestamp, callback) => {\n  if (type === 'image') {\n    return (\n      <img\n        src={`${baseUrl}${message}`}\n        className={'imageChat'}\n        onClick={() => callback(`${baseUrl}${message}`)}\n      />\n    );\n  } else {\n    return (\n      <div className=\"bubble\" title={friendlyTimestamp}>\n        {message}\n      </div>\n    );\n  }\n};\n\nexport default function Message(props) {\n  const {\n    data,\n    isMine,\n    startsSequence,\n    endsSequence,\n    showTimestamp,\n    type,\n    mine,\n    showUser,\n    isSend,\n  } = props;\n  const friendlyTimestamp = moment(data.timestamp).format('LLLL');\n  const user = useSelector(state => state.UserReducer);\n\n  const showModal = src => {\n    const modal = document.getElementById('myModal');\n    const img = document.getElementById('myImg');\n    const modalImg = document.getElementById('img01');\n    modal.style.display = 'block';\n    modalImg.src = src;\n  };\n\n  const hiddenModel = () => {\n    const modal = document.getElementById('myModal');\n    modal.style.display = 'none';\n  };\n\n  const dowloadFile = () => {\n    const modalImg = document.getElementById('img01');\n    const path = modalImg.src.split('/');\n    MessageApi.dowloadFileImage(path[path.length - 1]);\n  };\n  {\n    /*  */\n  }\n  const showReadMessageUser = users => {\n    if (isSend && isMine) {\n      return <i className=\"ion-ios-checkmark-circle-outline\"></i>;\n    } else {\n      return (\n        <ul className=\"list-user\">\n          {users.map((item, index) => {\n            return (\n              <li key={index}>\n                <img className=\"avatar_user_read\" src={item.avatar} />\n              </li>\n            );\n          })}\n        </ul>\n      );\n    }\n  };\n  return (\n    <>\n      <div\n        className={[\n          'message',\n          `${isMine ? 'mine' : ''}`,\n          `${startsSequence ? 'start' : ''}`,\n          `${endsSequence ? 'end' : ''}`,\n        ].join(' ')}\n      >\n        {showTimestamp && (\n          <div className=\"timestamp\"> {friendlyTimestamp} </div>\n        )}\n        <div className=\"bubble-container\">\n          {!isMine ? <img src={mine?.avatar} className=\"avatarmine\" /> : ''}\n          {showMessage(type, data.message, friendlyTimestamp, src =>\n            showModal(src),\n          )}\n        </div>\n        <div className=\"user_read_list\">{showReadMessageUser(showUser)}</div>\n      </div>\n      {type === 'image' ? (\n        <div id=\"myModal\" className=\"modal\">\n          <i\n            className=\"ion-md-arrow-down dowloadImage\"\n            onClick={dowloadFile}\n          ></i>\n          <span className=\"close\" id=\"close\" onClick={hiddenModel}>\n            &times;\n          </span>\n          <img className=\"modal-content\" id=\"img01\" />\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: 0;\n  background: #1da1f2;\n  font-size: 17px;\n  padding: 10px;\n  cursor: pointer;\n  border-radius: 5px;\n  color: white;\n  font-weight: bold;\n  margin-right: 10px;\n\n  &:last-child {\n    margin: 0px;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  &:hover {\n    background: #1872a9;\n  }\n`;\n","import styled from 'styled-components';\nimport React from 'react';\n\nconst Container = styled.div`\n  height: inherit;\n  display: flex;\n  align-items: center;\n  margin-bottom: -5px;\n\n  span {\n    width: 40px;\n    height: 40px;\n    display: flex;\n    overflow: hidden;\n    position: relative;\n    font-size: 2rem;\n    align-items: center;\n    flex-shrink: 0;\n    font-family: inherit;\n    line-height: 1;\n    user-select: none;\n    border-radius: 50%;\n    justify-content: center;\n  }\n\n  img {\n    color: transparent;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    text-align: center;\n    text-indent: 10000px;\n  }\n`;\n\nexport const AtomsProfilePicture = ({ picture }) => {\n  return (\n    <Container>\n      <span>\n        <img src={picture} alt=\"Profile Photo\" />\n      </span>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\nimport React from 'react';\n\nexport const AtomsLogo = styled.h1`\n  color: white;\n  font-size: 1.5rem;\n  @media screen and (max-width: 936px) {\n    font-size: 1rem;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const AtomsVideo = styled.video``;\n\n/*\ntransform: ${(props) => (props.screenShared ? 'none' : 'rotateY(180deg)')};\n-webkit-transform: rotateY(180deg);\n-moz-transform: rotateY(180deg);\n */\n","import React from 'react';\nimport { Button } from './AtomsButton';\n\nexport const AtomsFullScreenButton = ({ isFullScreen, onToggle }) => {\n  return <Button onClick={() => onToggle()}>{isFullScreen ? 'Exit Full Screen' : 'Full Screen'}</Button>;\n};\n","import React from 'react';\nimport { Button } from './AtomsButton';\n\nexport const AtomsShareScreen = ({ isSharing, onToggle }) => {\n  return <Button onClick={() => onToggle()}>{isSharing ? 'Cancel' : 'Share Screen'}</Button>;\n};\n","export default __webpack_public_path__ + \"static/media/menu.8dc73102.svg\";","import styled from 'styled-components';\nimport { AtomsVideo } from '../atoms';\n\nexport const MoleculesLocalVideo = styled(AtomsVideo)`\n  position: relative;\n  width: 100%;\n  background: black;\n\n  @media screen and (min-width: 936px) {\n    position: absolute;\n    border: 1px solid #38444d;\n    bottom: 60px;\n    right: 40px;\n    border-radius: 5px;\n    width: 300px;\n    height: auto;\n  }\n`;\n","import styled from 'styled-components';\nimport { AtomsVideo } from '../atoms';\n\nexport const MoleculesRemoteVideo = styled(AtomsVideo)`\n  background: black;\n  width: 100%;\n  min-height: 100vh;\n\n  @media screen and (max-width: 936px) {\n    box-shadow: none;\n    border-radius: 0;\n    width: 100%;\n    height: auto;\n    border: none;\n  }\n`;\n","import React from 'react';\nimport { Button } from './AtomsButton';\n\nexport const AtomsTurnOffButton = ({ onTurnOff }) => {\n  return <Button onClick={() => onTurnOff()}>TurnOff</Button>;\n};\n","import styled from 'styled-components';\nimport React, { useState } from 'react';\n\nconst SideBar = styled.div`\n  width: 280px;\n  z-index: 1;\n  background-color: #16202c;\n  position: relative;\n  top: 64px;\n  flex: 1 0 auto;\n  height: 100%;\n  display: flex;\n  outline: 0;\n  z-index: 9;\n  position: fixed;\n  overflow-y: auto;\n  flex-direction: column;\n  border-right: 0.5pt solid #38444d;\n  \n  @media screen and (max-width: 936px) {\n    display: ${(props) => (props.isLeftSideShow ? 'block' : 'none')};\n    width: ${(props) => (props.isLeftSideShow ? '100%' : '280px')};\n  }\n}\n`;\n\nconst SideBarBody = styled.div`\n  box-sizing: content-box;\n  flex-grow: 1;\n  overflow-y: auto;\n`;\n\nconst NavItem = styled.div`\n  padding: 10px 30px;\n  border-bottom: 1px solid #38444d;\n  cursor: pointer;\n  user-select: none;\n  color: white;\n\n  &:hover {\n    background-color: #25394c;\n    transition: background-color 0.5s ease;\n  }\n\n  ${(props) =>\n    props.selected &&\n    `\n    background-color: #25394c;\n    border-right: 5px solid #65a9e5;\n    font-weight: 500;\n    transition: all 0.5s ease;\n  `}\n`;\n\nexport const MoleculesLeftSide = ({ items, onItemSelect, isLeftSideShow }) => {\n  const [selectedId, setSelectedId] = useState();\n\n  const handleSelection = (item) => {\n    setSelectedId(item.id);\n    onItemSelect(item);\n  };\n\n  return (\n    <SideBar isLeftSideShow={isLeftSideShow}>\n      <SideBarBody>\n        <nav>\n          {items.map((item) => (\n            <NavItem\n              selected={selectedId === item.id}\n              role=\"button\"\n              onClick={() => handleSelection(item)}\n              key={item.id}\n            >\n              {item.title}\n            </NavItem>\n          ))}\n        </nav>\n      </SideBarBody>\n    </SideBar>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { AtomsFullScreenButton, AtomsShareScreen } from '../atoms';\nimport { AtomsTurnOffButton } from '../atoms/AtomsTrunOffButton';\n\nexport const MoleculesVideoControls = ({\n  isScreenSharing,\n  onScreenShare,\n  isFullScreen,\n  onFullScreen,\n  isTimerStarted,\n  onTurnOff,\n}) => {\n  const [elapsedTime, setElapsedTime] = useState(0);\n\n  useEffect(() => {\n    let interval;\n    if (isTimerStarted) {\n      interval = setInterval(() => setElapsedTime(time => time + 1), 1000);\n    } else {\n      setElapsedTime(0);\n    }\n\n    return () => clearInterval(interval);\n  }, [isTimerStarted]);\n\n  function formatElapsedTime() {\n    return new Date(elapsedTime * 1000).toISOString().substr(11, 8);\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        bottom: '24px',\n        display: 'flex',\n        justifyContent: 'center',\n        width: '100%',\n      }}\n    >\n      <div>\n        <AtomsShareScreen\n          isSharing={isScreenSharing}\n          onToggle={() => onScreenShare(!isScreenSharing)}\n        />\n        <AtomsFullScreenButton\n          isFullScreen={isFullScreen}\n          onToggle={() => onFullScreen(!isFullScreen)}\n        />\n        <AtomsTurnOffButton onTurnOff={onTurnOff} />\n      </div>\n      <div></div>\n      <span\n        style={{\n          color: 'white',\n          fontWeight: 'bold',\n          right: '40px',\n          bottom: '12px',\n          position: 'absolute',\n        }}\n      >\n        {formatElapsedTime(elapsedTime)}\n      </span>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const OrganismsMain = styled.main`\n  margin-left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${(props) => (props.full ? '#16202c' : 'black')};\n\n  @media screen and (max-width: 936px) {\n    margin-left: 0;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    z-index: inherit;\n  }\n`;\n","import styled from 'styled-components';\nimport React, { useState } from 'react';\nimport { AtomsLogo, AtomsProfilePicture } from '../atoms';\nimport menu from '../../images/menu.svg';\nimport { MoleculesLeftSide } from '../molecules';\n\nconst HeaderContainer = styled.header`\n  position: relative;\n  width: 100%;\n  display: flex;\n  background: #16202c;\n  box-shadow: 2px 2px 6px #000000;\n  box-sizing: border-box;\n  flex-shrink: 0;\n  flex-direction: column;\n  z-index: 10;\n\n  .toolbar {\n    height: 64px;\n    padding-left: 24px;\n    padding-right: 24px;\n    display: flex;\n    position: relative;\n    align-items: center;\n  }\n`;\n\nconst MenuIcon = styled.input.attrs({\n  type: 'image',\n  src: menu,\n})`\n  height: 40px;\n  width: 40px;\n  margin-right: 24px;\n  display: none;\n\n  &:focus {\n    outline: none;\n  }\n\n  @media screen and (max-width: 936px) {\n    display: block;\n    margin-left: 0;\n    flex-direction: column;\n  }\n`;\n\nexport const OrganismsHeader = ({ title, picture, navItems, onNavItemSelect }) => {\n  const [isLeftSideShow, setLeftSideShow] = useState(false);\n  return (\n    <>\n      <HeaderContainer>\n        <div className=\"toolbar\">\n          <MenuIcon onClick={() => setLeftSideShow((flag) => !flag)} />\n\n          <AtomsLogo>{title}</AtomsLogo>\n\n          <div style={{ flexGrow: 1 }} />\n          <AtomsProfilePicture picture={picture} />\n        </div>\n      </HeaderContainer>\n      {navItems && (\n        <MoleculesLeftSide\n          isLeftSideShow={isLeftSideShow}\n          onItemSelect={(user) => onNavItemSelect(user)}\n          items={navItems}\n        />\n      )}\n    </>\n  );\n};\n","import * as io from 'socket.io-client';\n\nconst { RTCPeerConnection, RTCSessionDescription } = window;\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nclass PeerConnectionSession {\n  constructor(socket, peerConnection) {\n    this.socket = socket;\n    this.peerConnection = peerConnection;\n    this.isAlreadyCalling = false;\n\n    this.peerConnection.addEventListener('connectionstatechange', event => {\n      console.log(this.peerConnection.connectionState);\n      const fn = this[\n        '_on' + capitalizeFirstLetter(this.peerConnection.connectionState)\n      ];\n      fn && fn(event);\n    });\n    this.onCallMade();\n  }\n\n  async callUser(room_id) {\n    const offer = await this.peerConnection.createOffer();\n    await this.peerConnection.setLocalDescription(\n      new RTCSessionDescription(offer),\n    );\n\n    this.socket.emit('make-offer', { offer, room_id });\n  }\n\n  onCallMade() {\n    this.socket.on('call-made', async data => {\n      const { room_id, offer } = data;\n      console.log('call-made', room_id, offer);\n      await this.peerConnection.setRemoteDescription(\n        new RTCSessionDescription(data.offer),\n      );\n      const answer = await this.peerConnection.createAnswer();\n      await this.peerConnection.setLocalDescription(\n        new RTCSessionDescription(answer),\n      );\n\n      this.socket.emit('make-answer', {\n        answer,\n        room_id,\n      });\n    });\n  }\n\n  onAnswerMade(callback) {\n    this.socket.on('answer-made', async data => {\n      await this.peerConnection.setRemoteDescription(\n        new RTCSessionDescription(data.answer),\n      );\n      console.log('answer', data.answer);\n      if (!this.isAlreadyCalling) {\n        callback(data.room_id);\n        this.isAlreadyCalling = true;\n      }\n    });\n  }\n\n  onConnected(callback) {\n    this._onConnected = callback;\n  }\n\n  onDisconnected(callback) {\n    this._onDisconnected = callback;\n  }\n\n  onCallRejected(callback) {\n    this.socket.on('call-rejected', data => {\n      callback(data);\n    });\n  }\n\n  onTrack(callback) {\n    this.peerConnection.ontrack = function({ streams: [stream] }) {\n      callback(stream);\n    };\n  }\n\n  callUserBeforeConnect(room_id) {\n    this.socket.emit('call-user', { room_id });\n  }\n\n  resolveCall(room_id) {\n    this.socket.emit('resolve-call', { room_id });\n  }\n\n  onResolveCall(callback) {\n    this.socket.on('resolve-call', data => {\n      const { room_id } = data;\n      callback(room_id);\n    });\n  }\n\n  onRejectCall(callback) {\n    this.socket.on('reject-call', data => {\n      const { user } = data;\n      callback(user);\n    });\n  }\n\n  turnOffVideoCall() {\n    this.peerConnection.close();\n  }\n\n  onListenStateChange(callback) {\n    this.peerConnection.onconnectionstatechange = () => {\n      switch (this.peerConnection.connectionState) {\n        case 'disconnected':\n          callback();\n          break;\n      }\n    };\n  }\n}\n\nexport const createPeerConnectionContext = () => {\n  const peerConnection = new RTCPeerConnection({\n    iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\n  });\n  const socket = io(process.env.REACT_APP_SERVER_DOMAIN_SOCKET);\n\n  return new PeerConnectionSession(socket, peerConnection);\n};\n","import { OrganismsMain } from '../../components/organisms';\nimport {\n  MoleculesLocalVideo,\n  MoleculesRemoteVideo,\n  MoleculesVideoControls,\n} from '../../components/molecules';\nimport React, { useEffect, useRef, useState } from 'react';\nimport './styles.css';\nimport qs from 'qs';\nimport { useLocation } from 'react-router-dom';\nimport { createPeerConnectionContext } from '../../utils/peer-video-connection';\n\nfunction useQuery() {\n  return qs.parse(useLocation().search, { ignoreQueryPrefix: true });\n}\n\nconst senders = [];\nlet peerVideoConnection;\nexport const Room = () => {\n  const params = useQuery();\n  const [userMediaStream, setUserMediaStream] = useState(null);\n  const [startTimer, setStartTimer] = useState(false);\n  const [displayMediaStream, setDisplayMediaStream] = useState(null);\n  const [isFullScreen, setFullScreen] = useState(false);\n  const [userCallReject, setUserCallReject] = useState({});\n  const [turnOff, setTurnOff] = useState(false);\n  const localVideo = useRef();\n  const remoteVideo = useRef();\n  const mainRef = useRef();\n  useEffect(() => {\n    peerVideoConnection = createPeerConnectionContext();\n  }, []);\n\n  useEffect(() => {\n    const createMediaStream = async () => {\n      if (!userMediaStream) {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            width: { min: 640, ideal: 1920 },\n            height: { min: 400, ideal: 1080 },\n            aspectRatio: { ideal: 1.7777777778 },\n          },\n          audio: true,\n        });\n\n        if (localVideo) {\n          localVideo.current.srcObject = stream;\n        }\n        stream.getTracks().forEach(track => {\n          senders.push(\n            peerVideoConnection.peerConnection.addTrack(track, stream),\n          );\n        });\n\n        setUserMediaStream(stream);\n      }\n    };\n\n    createMediaStream();\n  }, [userMediaStream]);\n\n  useEffect(() => {\n    peerVideoConnection.onAnswerMade(room_id =>\n      peerVideoConnection.callUser(room_id),\n    );\n    peerVideoConnection.onCallRejected(data =>\n      alert(`User: \"Socket: ${data.socket}\" rejected your call.`),\n    );\n    peerVideoConnection.onTrack(\n      stream => (remoteVideo.current.srcObject = stream),\n    );\n\n    peerVideoConnection.onResolveCall(room_id => {\n      peerVideoConnection.callUser(room_id);\n    });\n    peerVideoConnection.onConnected(() => {\n      setStartTimer(true);\n    });\n    peerVideoConnection.onDisconnected(() => {\n      setStartTimer(false);\n      remoteVideo.current.srcObject = null;\n    });\n    peerVideoConnection.onRejectCall(user => {\n      setUserCallReject(user);\n      setTimeout(() => {\n        window.close();\n      }, 2500);\n    });\n    peerVideoConnection.onListenStateChange(() => {\n      peerVideoConnection.turnOffVideoCall();\n      setTurnOff(true);\n    });\n  }, []);\n\n  useEffect(() => {\n    const isCall = parseInt(localStorage.getItem('user-call'));\n    if (isCall === 0) {\n      peerVideoConnection.resolveCall(params.room_id);\n    } else {\n      peerVideoConnection.callUserBeforeConnect(params.room_id);\n    }\n  }, []);\n\n  async function shareScreen() {\n    const stream =\n      displayMediaStream || (await navigator.mediaDevices.getDisplayMedia());\n\n    await senders\n      .find(sender => sender.track.kind === 'video')\n      .replaceTrack(stream.getTracks()[0]);\n\n    stream.getVideoTracks()[0].addEventListener('ended', () => {\n      cancelScreenSharing(stream);\n    });\n\n    localVideo.current.srcObject = stream;\n\n    setDisplayMediaStream(stream);\n  }\n\n  async function cancelScreenSharing(stream) {\n    await senders\n      .find(sender => sender.track.kind === 'video')\n      .replaceTrack(\n        userMediaStream.getTracks().find(track => track.kind === 'video'),\n      );\n\n    localVideo.current.srcObject = userMediaStream;\n    stream.getTracks().forEach(track => track.stop());\n    setDisplayMediaStream(null);\n  }\n\n  function fullScreen() {\n    setFullScreen(true);\n    const elem = mainRef.current;\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      elem.msRequestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      elem.webkitRequestFullscreen();\n    }\n  }\n\n  function cancelFullScreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n  }\n\n  function handleFullScreen(isFullScreen) {\n    setFullScreen(isFullScreen);\n    if (isFullScreen) {\n      fullScreen();\n    } else {\n      cancelFullScreen();\n    }\n  }\n\n  async function handleScreenSharing(isScreenShared) {\n    if (isScreenShared) {\n      await shareScreen();\n    } else {\n      await cancelScreenSharing(displayMediaStream);\n    }\n  }\n\n  const onTurnOff = () => {\n    peerVideoConnection.turnOffVideoCall();\n    setTurnOff(true);\n  };\n  return (\n    <>\n      <OrganismsMain ref={mainRef}>\n        {!turnOff ? (\n          <>\n            <MoleculesRemoteVideo ref={remoteVideo} autoPlay />\n            <MoleculesLocalVideo ref={localVideo} autoPlay muted />\n            <MoleculesVideoControls\n              isScreenSharing={Boolean(displayMediaStream)}\n              onScreenShare={handleScreenSharing}\n              isFullScreen={isFullScreen}\n              onFullScreen={handleFullScreen}\n              isTimerStarted={startTimer}\n              onTurnOff={onTurnOff}\n            />\n          </>\n        ) : (\n          <div className=\"Call_Modal\">\n            <div className=\"User_Call_Box\">\n              <h1>Cuộc gọi đã kết thúc</h1>\n            </div>\n          </div>\n        )}\n      </OrganismsMain>\n      {userCallReject?.id ? (\n        <div className=\"Call_Modal\">\n          <div className=\"User_Call_Box\">\n            <h1>Từ chối cuộc gọi</h1>\n            <div className=\"user_box\">\n              <div className=\"avatar_box\">\n                <img src={userCallReject.avatar} />\n              </div>\n              <div className=\"call-user-info\">\n                <p>\n                  <strong>{userCallReject.email}</strong>{' '}\n                  {'đã từ chối gọi cho bạn'}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport Compose from '../Compose';\nimport Toolbar from '../Toolbar';\nimport ToolbarButton from '../ToolbarButton';\nimport Message from '../Message';\nimport moment from 'moment';\nimport { useForm } from 'react-hook-form';\nimport ReactDOM from 'react-dom';\nimport { useNavigate } from 'react-router-dom';\nimport './MessageList.css';\nimport { useSelector } from 'react-redux';\nimport { Room } from '../../pages/VideoCall';\n\nexport default function MessageList(props) {\n  const { socket } = props;\n\n  const user = useSelector(state => state.UserReducer);\n  const { roomActive, rooms } = useSelector(state => state.RoomReducer);\n\n  const [mine, setMine] = React.useState({});\n  React.useEffect(() => {\n    const index = roomActive?.users?.findIndex(item => item.id !== user.id);\n    if (index > -1) {\n      setMine(roomActive.users[index]);\n    }\n  }, [roomActive]);\n\n  const methodsSendImage = useForm();\n  const handleSubmitSendImage = methodsSendImage.handleSubmit;\n  const registerSendImage = methodsSendImage.register;\n\n  const navigate = useNavigate();\n  const onClick = () => {\n    document.getElementById('inputFile').click();\n  };\n  const sendImage = data => {\n    const image = data.image[0];\n    var fileReader = new FileReader();\n    fileReader.readAsDataURL(image);\n    fileReader.onload = () => {\n      const arrayBuffer = fileReader.result;\n      const payload = {\n        user_id: user.id,\n        room_id: roomActive.id,\n        message: arrayBuffer,\n      };\n      socket.sendImage(payload);\n    };\n  };\n\n  const sendMessage = (data, callback) => {\n    const payload = {\n      user_id: user.id,\n      room_id: roomActive.id,\n      message: data.message,\n    };\n    socket.sendMess(payload);\n    callback();\n  };\n  const index = rooms.findIndex(room => room.id === roomActive.id);\n  const messages = rooms[index]?.messages;\n\n  const bottomRef = React.useRef();\n\n  const scrollToBottom = () => {\n    bottomRef.current.scrollIntoView({\n      behavior: 'smooth',\n    });\n  };\n  React.useEffect(() => {\n    scrollToBottom();\n  });\n\n  const renderMessages = () => {\n    let i = messages?.length - 1;\n    let tempMessages = [];\n    const flageUser = [];\n    while (i >= 0) {\n      let previous = messages[i - 1];\n      let current = messages[i];\n      let next = messages[i + 1];\n      let isMine = current.user_id === user.id;\n      let currentMoment = moment(current.timestamp);\n      let prevBySameAuthor = false;\n      let nextBySameAuthor = false;\n      let startsSequence = true;\n      let endsSequence = true;\n      let showTimestamp = true;\n      let type = messages[i]?.type;\n      let isSend = false;\n      if (previous) {\n        let previousMoment = moment(previous.timestamp);\n        let previousDuration = moment.duration(\n          currentMoment.diff(previousMoment),\n        );\n        prevBySameAuthor = previous.author === current.author;\n\n        if (prevBySameAuthor && previousDuration.as('hours') < 1) {\n          startsSequence = false;\n        }\n\n        if (previousDuration.as('hours') < 1) {\n          showTimestamp = false;\n        }\n      }\n\n      if (next) {\n        let nextMoment = moment(next.timestamp);\n        let nextDuration = moment.duration(nextMoment.diff(currentMoment));\n        nextBySameAuthor = next.author === current.author;\n\n        if (nextBySameAuthor && nextDuration.as('hours') < 1) {\n          endsSequence = false;\n        }\n      }\n      const showUser = [];\n      if (current.id) {\n        const { users } = current;\n        if (users?.length === 0) {\n          if (isMine === true) {\n            isSend = true;\n          } else if (current?.id) {\n            console.log(current);\n            socket.sendReadMessage({\n              id: current?.id,\n              room_id: roomActive.id,\n            });\n          }\n        }\n        for (const item of users) {\n          const index = flageUser.findIndex(e => {\n            return e === item.id;\n          });\n          if (index < 0 && item.id !== user.id) {\n            showUser.push(item);\n            flageUser.push(item.id);\n          }\n        }\n      }\n      tempMessages.unshift(\n        <Message\n          key={i}\n          isMine={isMine}\n          startsSequence={startsSequence}\n          endsSequence={endsSequence}\n          showTimestamp={showTimestamp}\n          data={current}\n          type={type}\n          mine={mine}\n          showUser={showUser}\n          isSend={isSend}\n        />,\n      );\n      i -= 1;\n    }\n\n    return tempMessages;\n  };\n  const messageEl = React.useRef(null);\n\n  const handleClickCallVideo = () => {\n    const newWindown = window.open(\n      `/videocall?room_id=` + roomActive.id,\n      '_blank',\n      'height=1200,width=1200',\n    );\n    localStorage.setItem('user-call', 1);\n  };\n  const sendTyping = event => {\n    if (event.target.value) {\n      socket.sendTyping({ room_id: roomActive.id });\n    }\n  };\n  const endTyping = () => {\n    socket.endTyping({ room_id: roomActive.id });\n  };\n\n  return (\n    <div className=\"message-list\">\n      <Toolbar\n        title=\"Conversation Title\"\n        rightItems={[\n          // <ToolbarButton\n          //   key=\"info\"\n          //   icon=\"ion-ios-information-circle-outline\"\n          // />,\n          <ToolbarButton\n            key=\"video\"\n            icon=\"ion-ios-videocam\"\n            onClick={() => handleClickCallVideo()}\n          />,\n        ]}\n      />\n      <div className=\"message-list-container\">\n        {renderMessages()}\n        {roomActive?.isTyping ? (\n          <div className=\"container-chat\">\n            <span className=\"circle\"></span>\n            <span className=\"circle\"></span>\n            <span className=\"circle\"></span>\n          </div>\n        ) : (\n          ''\n        )}\n\n        <div ref={bottomRef} className=\"list-bottom\"></div>\n      </div>\n      <Compose\n        leftItem={[\n          <ToolbarButton key=\"image\" icon=\"ion-ios-image\" onClick={onClick} />,\n          // <ToolbarButton key=\"attach\" icon=\"ion-md-attach\" />,\n        ]}\n        rightItems={[<ToolbarButton key=\"send\" icon=\"ion-md-send\" />]}\n        sendMessage={sendMessage}\n        sendTyping={sendTyping}\n        endTyping={endTyping}\n      />\n      <form>\n        <input\n          hidden\n          type=\"file\"\n          name=\"image\"\n          id=\"inputFile\"\n          ref={registerSendImage}\n          onChange={handleSubmitSendImage(sendImage)}\n        />\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\nimport './Messenger.css';\n\nexport default function Messenger(props) {\n  \n  return (\n      <div className=\"messenger\">\n        <div className=\"scrollable sidebar\">\n          <ConversationList {...props}/>\n        </div>\n\n        <div className=\"scrollable content\">\n          <MessageList {...props}/>\n        </div>\n      </div>\n    );\n}","export const MessageListActionType = {\n    GET_LIST_MESSAGE: \"GET_LIST_MESSAGE\",\n    ADD_MESSAGE: \"ADD_MESSAGE\"\n}","export const CallActionType = {\n    IS_CALL_TRUE: \"IS_CALL_TRUE\",\n    IS_CALL_FALSE: \"IS_CALL_FALSE\"\n}","import { CallActionType } from '../constants/actions/call.action';\n\nexport const CallAction = {\n  setIsCallTrue: (payload) => {\n    return {\n      type: CallActionType.IS_CALL_TRUE,\n      payload\n    };\n  },\n  setIsCallFalse: () => {\n    return {\n      type: CallActionType.IS_CALL_FALSE,\n    };\n  },\n};\n","import React from \"react\";\nimport Messenger from \"../../components/Messenger\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RoomAction } from \"../../actions/room.action\";\nimport { MessageAction } from \"../../actions/message.action\";\nimport * as io from \"socket.io-client\";\nimport { SocketService } from \"../../socket\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./styles.css\";\nimport { UserAction } from \"../../actions/user.action\";\nimport { CallAction } from \"../../actions/call.action\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.UserReducer);\n  const navigation = useNavigate();\n  const { roomActive } = useSelector((state) => state.RoomReducer);\n\n  const socketConnection = ((dispatch) => {\n    return (userId) => {\n      const socketIo = io(process.env.REACT_APP_SERVER_DOMAIN_SOCKET);\n      const socketFunction = SocketService(socketIo, dispatch, userId);\n      socketFunction.afterConnect({ user_id: user.id });\n      socketFunction.joinListRoom({ offset: 0 });\n      setSocket(socketFunction);\n    };\n  })(dispatch);\n  React.useEffect(() => {\n    dispatch(\n      UserAction.getUserInfo(user, () => navigation(\"/auth\"), socketConnection)\n    );\n  }, []);\n\n  React.useEffect(() => {\n    const getListMessage = async () => {\n      if (roomActive?.id) {\n        dispatch(RoomAction.setMessage(roomActive.id));\n      }\n    };\n    getListMessage();\n  }, [roomActive]);\n\n  // React.useEffect(() => {\n  //   const socketIo = io(process.env.REACT_APP_SERVER_DOMAIN_SOCKET);\n  //   const socketFunction = SocketService(socketIo, dispatch, user.id);\n  //   setSocket(socketFunction);\n  // }, []);\n\n  const [socket, setSocket] = React.useState(\"\");\n  const callState = useSelector((state) => state.CallReducer);\n  const { isCall, userCall, room_id } = callState;\n  // React.useEffect(() => {\n  //   if (socket) {\n  //     socket.afterConnect({ user_id: user.id });\n  //   }\n  // }, [socket]);\n\n  const { rooms } = useSelector((state) => state.RoomReducer);\n\n  // React.useEffect(() => {\n  //   if (socket) {\n  //     console.log(1);\n  //     socket.joinListRoom({ offset: 0 });\n  //   }\n  // }, [socket]);\n\n  const handleClickYes = (room_id) => {\n    const newWindown = window.open(\n      `/videocall?room_id=` + room_id,\n      \"_blank\",\n      \"height=1200,width=1200\"\n    );\n    dispatch(CallAction.setIsCallFalse());\n    localStorage.setItem(\"user-call\", 0);\n  };\n\n  const handleClickNo = (room_id) => {\n    socket.rejectCall({ room_id });\n    dispatch(CallAction.setIsCallFalse());\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <Messenger socket={socket} />\n      </div>\n      {isCall ? (\n        <div className=\"Call_Modal\">\n          <div className=\"User_Call_Box\">\n            <h1>Có cuộc gọi tới</h1>\n            <div className=\"user_box\">\n              <div className=\"avatar_box\">\n                <img src={userCall.avatar} />\n              </div>\n              <div className=\"call-user-info\">\n                <p>\n                  <strong>{userCall.email}</strong> {\"đang gọi cho bạn\"}\n                </p>\n                <span>{\"Cuộc gọi bắt đầu khi bạn nhấn chấp nhận\"}</span>\n                <div className=\"group_button\">\n                  <button onClick={() => handleClickNo(room_id)}>\n                    {\"Từ Chối\"}\n                  </button>\n                  <button onClick={() => handleClickYes(room_id)}>\n                    {\"Chấp Nhận\"}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n","import { MessageAction } from '../actions/message.action';\nimport { RoomAction } from '../actions/room.action';\nimport { CallAction } from '../actions/call.action';\n\nexport const SocketService = (socket, dispatch, userId) => {\n  //close windown\n\n  window.onbeforeunload = function (e) {\n    socket.emit('offline', {});\n  };\n\n  socket.on('connect', () => {\n    console.log('connected ...');\n  });\n  socket.on('recvMess', (payload) => {\n    console.log(payload);\n    const sendReadMessage = (payload) => {\n      console.log(payload);\n      socket.emit('read-message', payload);\n    };\n    dispatch(RoomAction.changeTopRoom({ payload, sendReadMessage, userId }));\n  });\n  socket.on('recvRoom', (payload) => {\n    socket.emit('joinRoom', payload);\n    dispatch(RoomAction.moveTop(payload));\n  });\n  socket.on('call-user', (payload) => {\n    const { user } = payload;\n    if (user.id !== userId) {\n      dispatch(CallAction.setIsCallTrue(payload));\n    }\n  });\n\n  socket.on('typing', (payload) => {\n    const { room_id } = payload;\n    dispatch(RoomAction.updateTypingActiveRoom({ typing: true, room_id }));\n  });\n  socket.on('endtyping', (payload) => {\n    const { room_id } = payload;\n    dispatch(RoomAction.updateTypingActiveRoom({ typing: false, room_id }));\n  });\n  socket.on('online', (payload) => {\n    const { user_id } = payload;\n    dispatch(RoomAction.updateStatusUser({ user_id, online: true }));\n  });\n  socket.on('offline', (payload) => {\n    const { user_id } = payload;\n    dispatch(RoomAction.updateStatusUser({ user_id, online: false }));\n  });\n  socket.on('rooms', (payload) => {\n    console.log(payload);\n    dispatch(RoomAction.getListRoom(payload));\n  });\n  socket.on('read-message', (payload) => {\n    dispatch(RoomAction.setUpdateReadMessage(payload));\n  });\n\n  return {\n    sendMess: (payload) => {\n      socket.emit('sendMess', payload);\n    },\n    joinRoom: (payload) => {\n      socket.emit('joinRoom', payload);\n    },\n    afterConnect: (payload) => {\n      socket.emit('afterConnect', payload);\n    },\n    joinListRoom: (payload) => {\n      console.log('joinListRoom');\n      socket.emit('joinListRoom', payload);\n    },\n    sendImage: (payload) => {\n      socket.emit('sendImage', payload);\n    },\n    createRoom: (payload) => {\n      socket.emit('createRoom', payload);\n    },\n    sendTyping: (payload) => {\n      socket.emit('typing', payload);\n    },\n    endTyping: (payload) => {\n      socket.emit('endtyping', payload);\n    },\n    sendReadMessage: (payload) => {\n      socket.emit('read-message', payload);\n    },\n    rejectCall: (payload) => {\n      socket.emit('reject-call', payload);\n    },\n  };\n};\n","import React from 'react';\nimport AuthPage from \"./pages/AuthPage\";\nimport ChatPage from \"./pages/ChatPage\";\nimport { Room } from './pages/VideoCall';\n\nconst routes = [\n  {\n    path: \"/\",\n    element: <ChatPage/>\n  },\n  {\n    path: \"/auth/*\",\n    element: <AuthPage />\n  },\n  {\n    path:\"/videocall/*\",\n    element: <Room />\n  }\n];\n\nexport default routes;","import {useRoutes} from \"react-router-dom\";\nimport routes from \"../routes\";\nimport 'react-toastify/dist/ReactToastify.css';\nexport default function App() {\n  const routing = useRoutes(routes);\n    return (\n      <div className=\"App\">\n        {routing}\n      </div>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { RoomAction } from \"../actions/room.action\";\nimport { RoomActionType } from \"../constants/actions/room.action\";\nconst initState = {\n  rooms: [],\n  roomActive: {},\n};\n\nconst RoomReducer = (state = initState, action) => {\n  switch (action.type) {\n    case RoomActionType.GET_LIST_ROOM:\n      return {\n        ...state,\n        rooms: action.payload,\n        roomActive: action.payload.length > 0 ? action.payload[0] : {},\n      };\n\n    case RoomActionType.CHANGE_ACTIVE_ROOM:\n      return {\n        ...state,\n        roomActive: action.payload,\n      };\n    case RoomActionType.CHANGE_TOP_ROOM: {\n      const { rooms, roomActive } = state;\n      const { payload, sendReadMessage, userId } = action.payload;\n      if (payload.room_id === roomActive.id && payload.user_id !== userId) {\n        sendReadMessage(payload);\n      }\n      const roomIndex = rooms.findIndex((item) => item.id === payload.room_id);\n\n      if (roomIndex > -1) {\n        rooms[roomIndex].messages.push(payload);\n        rooms.unshift(...rooms.splice(roomIndex, 1));\n      }\n      return {\n        ...state,\n        rooms,\n        roomActive,\n      };\n    }\n    case RoomActionType.SET_MESSAGE: {\n      const { rooms, roomActive } = state;\n      const roomIndex = rooms.findIndex((item) => item.id === roomActive.id);\n      if (roomIndex > -1) {\n        rooms[roomIndex].messages = action.payload;\n        roomActive.messages = action.payload;\n      }\n      return {\n        ...state,\n        rooms,\n        roomActive,\n      };\n    }\n    case RoomActionType.MOVE_TOP_ROOM: {\n      const { rooms } = state;\n      rooms.unshift(action.payload);\n      return {\n        ...state,\n        rooms,\n      };\n    }\n    case RoomActionType.UPDATE_TYPING_ACTIVE_ROOM: {\n      const { roomActive } = state;\n      const { room_id } = action.payload;\n      if (room_id === roomActive.id) {\n        roomActive.isTyping = action.payload?.typing;\n      }\n      return {\n        ...state,\n        roomActive,\n      };\n    }\n\n    case RoomActionType.UPDATE_STATUS_USER: {\n      const { user_id, online } = action.payload;\n      const { rooms } = state;\n      const newListRoom = [];\n      for (const room of rooms) {\n        const { users } = room;\n        const index = users.findIndex((item) => item.id === user_id);\n        if (index > -1) {\n          users[index].online = online;\n        }\n        newListRoom.push(room);\n      }\n      return {\n        ...state,\n        rooms: newListRoom,\n      };\n    }\n    case RoomActionType.UPDATE_READ_MESSAGE: {\n      const { rooms } = state;\n      const { message_id, room_id, user } = action.payload;\n      const index = rooms.findIndex((item) => item.id === room_id);\n      if (index > -1) {\n        const { messages } = rooms[index];\n        const i = messages.findIndex((item) => item.id === message_id);\n        if (i > -1) {\n          console.log(messages[i]);\n          messages[i].users = [];\n          messages[i].users.push(user);\n        }\n      }\n      return {\n        ...state,\n        rooms,\n      };\n    }\n    default:\n      return {\n        ...state,\n      };\n  }\n};\nexport default RoomReducer;\n","import { UserActionType } from '../constants/actions/user.action';\n\nconst initState = {\n  email: '',\n  avatar: '',\n  isLogin: false,\n};\n\nconst UserReducers = (state = initState, action) => {\n  switch (action.type) {\n    case UserActionType.SET_INFO:\n      return {\n        ...state,\n        ...action.payload,\n        isLogin: true,\n      };\n    case UserActionType.RESET_INFO:\n      return {\n        ...initState,\n      };\n    case UserActionType.CHANGE_AVATAR: {\n      return {\n        ...state,\n        avatar: action.payload\n      }\n    }\n    default:\n      return {\n        ...state,\n      };\n  }\n};\nexport default UserReducers;\n","import { MessageListActionType } from '../constants/actions/messagelist.action';\n\nconst initState = {\n  messages: []\n};\n\nconst MessageListReducer = (state = initState, action) => {\n  switch (action.type) {\n    case MessageListActionType.GET_LIST_MESSAGE:\n      return {\n        ...state,\n        messages: action.payload\n      }\n    case MessageListActionType.ADD_MESSAGE:\n      const {messages} = state;\n      messages.push(action.payload);\n      return {...state, messages};\n    default:\n      return {\n        ...state,\n      };\n  }\n};\nexport default MessageListReducer;\n","import { CallActionType } from '../constants/actions/call.action';\n\nconst initState = {\n  isCall: false,\n  userCall: \"\", \n  room_id: -1,\n};\n\nconst CallReducer = (state = initState, action) => {\n  switch (action.type) {\n    case CallActionType.IS_CALL_TRUE:\n        const { payload } = action;\n      return {\n        ...state,\n        isCall: true,\n        userCall: payload.user,\n        room_id: payload.room_id\n      };\n    case CallActionType.IS_CALL_FALSE:\n      return {\n        ...initState,\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n};\nexport default CallReducer;\n","import { combineReducers } from \"redux\";\nimport RoomReducer from \"./room.reducer\";\nimport UserReducer from \"./user.reducer\";\nimport MessageListReducer from \"./messagelist.reducer\";\nimport CallReducer from \"./call.reducer\";\nconst rootReducer = combineReducers({\n    RoomReducer,\n    UserReducer,\n    MessageListReducer,\n    CallReducer\n});\nexport default rootReducer;","import rootReducer from \"./reducers/index.reducer\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport thunk from \"redux-thunk\";\nconst store = createStore(\n\trootReducer,\n\tcomposeWithDevTools(applyMiddleware(thunk))\n);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './App';\nimport { createBrowserHistory } from 'history';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}